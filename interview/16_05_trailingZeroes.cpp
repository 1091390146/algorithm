#include <vector>
#include <algorithm>
#include <string>

using namespace std;

/*
面试题 16.05. 阶乘尾数
设计一个算法，算出 n 阶乘有多少个尾随零。

示例 1:

输入: 3
输出: 0
解释: 3! = 6, 尾数中没有零。
示例 2:

输入: 5
输出: 1
解释: 5! = 120, 尾数中有 1 个零.
*/

/*
1、最初想到先把阶乘计算出来，再对结果进行处理，从而得到0的个数，但当计算完阶乘后，发现0的个数并不好获取。
2、之后考虑到，哪些数相乘会有零出现，也就是哪些数相乘会是10或10的倍数。也就得到2x5、4x5、6x5......会是10或10的倍数,也就是5和一个偶数相乘会得到10或10的倍数。
3、在数的阶乘中，偶数的个数明显多于5的个数，所以只要计算出阶乘中每个数的因数中5的个数，即可得到0的个数
4、所以只要计算在阶乘中是5的倍数的个数（包含一个5）、25的倍数的个数（包含两个5）、125的倍数的个数（包含3个5）......

*/

class Solution {
public:
    int trailingZeroes(int n) {
        int sum = 0;
        while (n >= 5) {
    	    n /= 5;
    	    sum += n;
        }
        return sum;
    }
};

